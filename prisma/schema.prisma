// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid())
  email         String       @unique
  emailVerified Boolean      @default(false)
  firstName     String
  lastName      String?
  countryCode   String?
  timezone      String?
  locale        String?
  avatar        File?
  pictureUrl    String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  joinedTeams   TeamMember[]
  createdTeams  Team[]
}

enum TeamRole {
  ADMIN
  TEAMMATE
}

model TeamMember {
  id       String   @id @default(uuid())
  team     Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId   String
  member   User     @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId String
  joinedAt DateTime @default(now())
  role     TeamRole @default(TEAMMATE)
}

model Team {
  id         String       @id @default(uuid())
  inviteCode String
  teammates  TeamMember[]
  owner      User         @relation(fields: [ownerId], references: [id])
  logo       File?
  ownerId    String
  name       String
  isArchived Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model File {
  id           String   @id @default(uuid())
  name         String?
  bucket       String
  key          String
  size         Int
  mimetype     String
  userAvatar   User?    @relation(fields: [userAvatarId], references: [id], onDelete: Cascade)
  teamLogo     Team?    @relation(fields: [teamLogoId], references: [id], onDelete: Cascade)
  userAvatarId String?  @unique
  teamLogoId   String?  @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
